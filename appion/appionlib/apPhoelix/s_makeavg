#!/bin/csh -f

# s_makeavg: 	creates an average from a group of files. Put your list in 
#               a file, say, "average1.dat". The average created will be 
#               called "average1.avg".
# Usage:	s_makeavg listfile <template> maxresid
#
# If the template is not included, this will simply average your files. 
# If template is included, you get your files fit to the template and shifted 
# prior to averaging.  If you are fitting, this will leave out data sets 
# whose rscales exceed the value of maxrscale in hlx_params.

source phoelix_params
if ($s_verbose) echo `basename $0` $argv


if ( $#argv == 1 ) then
	set avflag="avg"
else
	set avflag="null"
endif

echo " "
if ( $avflag == "avg" ) then
	echo "Averaging only..."
else
	echo "Fitting and averaging..."
endif

set listfile=$1
set template=$2
if (  $#argv == 3 ) set maxresid = $3

alias mv mv
set filenum=`grep -Ev '^[[:space:]]*$' $listfile | wc -l`
set listp=$listfile:r
set i=1
set k=0

set avgfile=$listp.raw
set tempfile=$listp.temp

if (-f $avgfile) rm $avgfile
if (-f $tempfile) rm $tempfile
touch $avgfile
if (-f $listp.deks) rm $listp.deks
if (-f $listfile.log) rm $listfile.log
if (-f $listfile.fit) rm $listfile.fit

while ( $i <= $filenum )
	set file=`grep -Ev '^[[:space:]]*$' $listfile | head -$i | tail -1`
	set filep = $file:r
	set files = $file:e
	if ( $avflag != "avg" ) then
		set num_lls=`grep LL $file | wc -l | awk '{print $1}'`
		echo " "
		if ( $files == "far" ) then
			set tag="f"
			echo "fitting "$file" as a far side..."
		else
			set tag="n"
			echo "fitting "$file" as a near side..."
		endif
		# fit the side to a template, and shift to
		# the phase origin of the template.
		s_fitall $template $file $num_lls $delbr $xover $maxresid $listfile.fit
		if -f noshift.dat then
			cp hlxavg.dek $filep$tag.hlxavg_dek
			s_phoelixavg $file $filep$tag.shi
			cat noshift.dat
			echo ">> maxresid is   " $maxresid
			echo ">> Not including "$filep$tag.shi "in average."
			echo $filep$tag.shi ":" `cat noshift.dat` "exceeds " $maxresid >> $listfile.log
		else
			echo "shifting data..."
			cp hlxavg.dek $filep$tag.hlxavg_dek
			s_phoelixavg $file $filep$tag.shi
			cat hlxavg.dek >> $listp.deks
			echo "Putting "$file" in average..."
			echo $filep$tag.shi ":" included >> $listfile.log
			cat $file >> $avgfile
			set k=`ee $k + 1`
		endif
	else
		echo "Putting "$file" in average..."
		set num_lls=`grep LL $file | wc -l | awk '{print $1}'`
		cat $avgfile $file > $tempfile
		mv $tempfile $avgfile
		set k=`ee $k + 1`
	endif	
	set i=`ee $i + 1`
end
if ( $avflag != "avg" ) then
	set setnum=`cat $listp.deks | wc -l | awk '{print $1}'`
	set setnum=`ee $setnum : 4`
	echo " "$listp > hlxavg.dek
	set llnum=`head -2 $listp.deks | tail -1 | awk '{print $1}'`
	set repk=`head -2 $listp.deks | tail -1 | awk '{print $3}'`
	set delbr=`head -2 $listp.deks | tail -1 | awk '{print $4}'`
	echo $llnum $setnum $repk $delbr "0" >> hlxavg.dek
	set i=0
	while ( $i < $setnum )
		head -`ee $i x 4 + 4` $listp.deks | tail -2 >> hlxavg.dek
		@ i++
	end
else
	echo " "$listp > hlxavg.temp
	echo $num_lls `ee $k` `head -2 hlxavg.dek | tail -1 | awk '{print $3} {print $4} {print $5}'` >> hlxavg.temp
	set i=1
	while ( $i <= $filenum )
		echo "0 0 0 0 1" >> hlxavg.temp
		echo "1" >> hlxavg.temp
		set i=`ee $i + 1`
	end
	mv hlxavg.temp hlxavg.dek
endif
s_phoelixavg $avgfile $listp.avg
echo "All of the hlxavg.dek files have been stored in "$listp".deks"
echo "Created "$listp".avg"
