#!/bin/csh -f

# s_snifprep: dump layer lines for sniffing. Finds nearest integer to each
#	layer line intercept and dumps that one and those on either side
#	(+/- snifwidth, set in hlx_params). Then runs hlxdumpwp. Input files 
#	are the hlxdump.dek and .fft for file of interest. Output file are 
#	near and far side layerline data for all the layer lines. File name is 
#	$filep.snifprep.raw

source phoelix_params

if ($s_verbose) echo `basename $0` $argv

set fftfile=$1
set template=$2

set filep = $fftfile:r
set input_dekfile=$filep.hlxdump.dek

set snifdiam=`ee 2 x $snifwidth + 1`

# Read the top of the original hlxdump.dek for parameters.
set filelen=`wc -l $input_dekfile | awk '{print $1}'`
set title=`head -1 $input_dekfile`
set params1=`head -2 $input_dekfile | tail -1 | awk '{print $2, $3, $4, $5, $6, $7, $8}'`
set params2=`head -3 $input_dekfile | tail -1 | awk '{print $1, $2, $3, $4}'`

# Calculate how many lines we are going to dump.
set lines=`grep LL $template | wc -l | awk '{print $1}'`
set lines_to_dump=`ee "[ $lines x $snifdiam ]"`

# Write the top of the new hlxdump.dek.
echo $title  > hlxdump.dek
echo $title > hlxdump.dek_keep
echo $lines_to_dump $params1 >> hlxdump.dek
echo `ee $lines + 1` $params1 >> hlxdump.dek_keep
echo $params2 "0 0" >> hlxdump.dek
echo $params2 "$width $iphase" >> hlxdump.dek_keep
head -5 $input_dekfile | tail -2 >> hlxdump.dek
head -7 $input_dekfile | tail -4 >> hlxdump.dek_keep

# Now write the dumping parameters.
set i=6
set j=1
while ( $j <= $lines )
	grep LL $template > ll.tmp
	set line_to_find=`head -$j ll.tmp | tail -1 | awk '{print $NF}' | sed 's/LL//'`
	# Horrible way to do this! Will cause trouble at some point for sure!
	grep 1.000 $template > llbo.tmp
	set bessel_to_find=`head -$j llbo.tmp | tail -1 | awk '{print $2}'`
		top::	
		set line1=`head -$i $input_dekfile | tail -1`
		set llnum=`echo $line1 | awk '{print $1}'`
		set bessel=`echo $line1 | awk '{print $2}'`
		set incept=`echo $line1 | awk '{print $3}'`
		@ i++
		set line2=`head -$i $input_dekfile | tail -1`
		# echo $llnum $line_to_find $bessel $bessel_to_find
		if ( ($llnum == $line_to_find) && ($bessel == $bessel_to_find)) then
			set k=`ee -1 x $snifwidth`
			while ( $k <= $snifwidth )
				set newincept=`ee "int[ $incept + 0.5 ] + $k"`
				#echo $llnum $bessel $newincept 
				echo $llnum $bessel $newincept >> hlxdump.dek
				echo $line2 >> hlxdump.dek
				set k=`ee $k + 1`
			end
			echo $llnum $bessel $incept >> hlxdump.dek_keep
			echo $line2 >> hlxdump.dek_keep
			@ i++
		else
			@ i++
			goto top:
		endif
	@ j++
end

cp hlxdump.dek $filep"_snifall.hlxdump_dek"
#if ($s_verbose) echo "Dumping layer lines..."
s_phoelixdump $fftfile  $filep"_snifall.hlxdump_dek" $filep"_tmp.ner" $filep"_tmp.far" 

#if ($s_verbose) echo "Creating shifted near side for sniffing..."

set filein=$filep"_tmp.ner"
set fileout=$filep"_snif_n.shi"

head -1 < $filep"n".hlxavg_dek > hlxavg.dek
echo $lines_to_dump `head -2 < $filep"n".hlxavg_dek | tail -1 | awk '{print $2, $3, $4, $5}'` >> hlxavg.dek
tail -2 < $filep"n".hlxavg_dek >> hlxavg.dek
cp hlxavg.dek $filep"n"_snif.hlxavg_dek

s_phoelixavg $filein $fileout

#if ($s_verbose) echo "Creating shifted far side for sniffing..."

set filein=$filep"_tmp.far"
set fileout=$filep"_snif_f.shi"

head -1 < $filep"f".hlxavg_dek > hlxavg.dek
echo $lines_to_dump `head -2 < $filep"f".hlxavg_dek | tail -1 | awk '{print $2, $3, $4, $5}'` >> hlxavg.dek
tail -2 < $filep"f".hlxavg_dek >> hlxavg.dek
cp hlxavg.dek $filep"f"_snif.hlxavg_dek

s_phoelixavg $filein $fileout

echo "snifems -a $template -n $filep"_snif_n.shi" -f $filep"_snif_f.shi" -p $snifdiam -w -v -fl > snif.out"
snifems -a $template -n $filep"_snif_n.shi" -f $filep"_snif_f.shi" -p $snifdiam -w -v -fl > snif.out
set headval=5
set loop=`wc -l < snif.out | awk '{print $1}'`

head -6 < hlxdump.dek_keep > hlxdump.dek
echo $nl1 $nl2 $nr1 $nr2 >> hlxdump.dek
set i=1
while ( $i <= $loop)
	set peakval=`head -$i < snif.out | tail -1 | awk '{print $6}'`
	set intpeakval=`ee "int[ $peakval ]"`
	set location=`ee "$headval + [ 2 x $intpeakval ] + 1"`
	set ll=`head -$location < $filep"_snifall.hlxdump_dek" | tail -1 | awk '{print $1}'`
	set bo=`head -$location < $filep"_snifall.hlxdump_dek" | tail -1 | awk '{print $2}'`
	set intercept=`head -$location < $filep"_snifall.hlxdump_dek" | tail -1 | awk '{print $3}'`
	set intercept=`ee $intercept + $peakval - $intpeakval`
	echo $ll $bo $intercept >> hlxdump.dek
	echo $nl1 $nl2 $nr1 $nr2 >> hlxdump.dek
	set headval=`ee "$headval + [ $snifdiam x 2 ]"`
	@ i++
end
cp hlxdump.dek $filep"_snif.hlxdump_dek"
#rm $filep"_snif.hlxdump_dek" $filep"_snif_n.shi" $filep"_snif_f.shi" hlxdump.dek_keep

#if ($s_verbose) echo "dumping new sniffed layer lines..."

s_phoelixdump $fftfile $filep"_snif.hlxdump_dek" $filep"_snif.ner" $filep"_snif.far"
rm $filep"_tmp".far $filep"_tmp".ner $filep"_tmp".raw
rm $filep"_snif_n".shi $filep"_snif_f".shi ll.tmp llbo.tmp
