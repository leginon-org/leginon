#!/bin/csh -f
#####
# s_findll
# Usage: file.colb $filep.info
# Input file: .colb .llboint
# Output file:  .llboint $filep.info
#####

source phoelix_params

if ($s_verbose) echo `basename $0` $argv

set argnum=$#argv

set datafile=$1
set infofile=$2
set llbofile = $3

set filep = $datafile:r

# We'll need noglob to be set.  
if ($?noglob == 0) then
   set noglob_set = 0
   set noglob
else
   set noglob_set = 1
endif

# For each peak in the list of llbo we need to look for a peak and 
# then report if it was found or not and write out llbo again with intercept
# + at the found and also the difference if neccessary

# Get the layer line spacing dell
set dell = `grab $infofile $filep =$regno`

# Figure out the average value of the background past the first LL 
set ignore = `ee $dell x 2`
set avsd=`lstat -ns $ignore < $datafile`

set llboint = llboint.temp
if ( -f $llboint ) rm $llboint
touch $llboint
echo 0 0 0 > $llboint

set lltot=`wc -l < $llbofile`
set i=2
set range=`ee "int[[$dell : $rangefactor] - 1.0 + 0.5]"`
if ($range < 1) set range = 1

while ($i <= $lltot)
	set llbo=`head -$i < $llbofile | tail -1`
	set llnum = $llbo[1]
	set bessel = $llbo[2]
	#set llint = `ee "int[[$dell x $llnum]]"`
	set llint = `ee "[[$dell x $llnum]]"`
	#echo "lpeaki -p 1 -i $llint -r $range $avsd -n $nsdev < $datafile"
	set peak=`lpeaki -= $regno -p 1 -i $llint -r $range $avsd -n $nsdev < $datafile | awk '{print $2}'`
	# Kludge cos lpeaki can return NO PEAK FOUND or -1
	if ($peak == "PEAK") set peak = -1
	greater $peak 0
	if ($status) then
		#echo "J"$bessel "at" $llint ": predicted"
		echo $llnum $bessel $llint >> $llboint
	else
		set diff=`ee $peak - $llint`
		greater 5.0 `ee "abs[$diff]"`
		if (! $status) then
			echo $llnum $bessel $peak + >> $llboint
			echo "       J"$bessel "found at" $peak ": "$diff "off"
			echo "       J"$bessel "found at" $peak ": "$diff "off" >> $filep.log
		else
			echo "       J"$bessel "at" $peak ": predicted as differs by" $diff
			echo "       J"$bessel "at" $peak ": predicted as differs by" $diff >> $filep.log  
			echo $llnum $bessel $llint - >> $llboint
		endif
	endif
	#stash $infofile $filep =$regno $peak
	@ regno++
	@ i++
end
mv $llboint $filep.llboint
if ($noglob_set == 0) then
   unset noglob
endif
