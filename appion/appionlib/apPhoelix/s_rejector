#!/bin/csh -f
#
#s_rejector : scans through all ner and far files in the list before averaging to check for any corrupt files that will blow up in s_fautoavg
#Usage: s_rejector avg.list template
#
#LSF 10/6/09

set infile = $1
set template = $2
set lines = `wc -l $infile | awk '{print $1}'`

mkdir -p rejects
rm -f reject.log

set i = 1

while ($i <= $lines)
set filex = `head -$i $infile | tail -1`
set filep = `prefix $filex`

set ll = `grep LL $filex | wc -l`
set llcor = `grep LL $template | wc -l`
set x1 = `tail -10 $filex | head -1 | cut -c 12-16`
set xx1 = `ee "int[$x1 x 1000]"`
set x2 = `tail -9 $filex | head -1 | cut -c 12-16`
set xx2 = `ee "int[$x2 x 1000]"`
set x3 = `tail -8 $filex | head -1 | cut -c 12-16`
set xx3 = `ee "int[$x3 x 1000]"`
set x4 = `tail -7 $filex | head -1 | cut -c 12-16`
set xx4 = `ee "int[$x4 x 1000]"`
set x5 = `tail -6 $filex | head -1 | cut -c 12-16`
set xx5 = `ee "int[$x5 x 1000]"`
set xavg = `ee int[[$xx1 + $xx2 + $xx3 + $xx4 + $xx5] : 5]`
set phs1 = `tail -10 $filex | head -1 | cut -c 22-26`
set phs1x = `ee "int[$phs1 x 1000]"`
set phs2 = `tail -9 $filex | head -1 | cut -c 22-26`
set phs2x = `ee "int[$phs2 x 1000]"`
set phs3 = `tail -8 $filex | head -1 | cut -c 22-26`
set phs3x = `ee "int[$phs3 x 1000]"`
set phs4 = `tail -7 $filex | head -1 | cut -c 22-26`
set phs4x = `ee "int[$phs4 x 1000]"`
set phs5 = `tail -6 $filex | head -1 | cut -c 22-26`
set phs5x = `ee "int[$phs5 x 1000]"`
set phsavg = `ee int[[$phs1x + $phs2x + $phs3x + $phs4x + $phs5x] : 5]`

if ($ll <= 1 ) then
	echo "$filex is empty. File moved to rejects. Stop processing on this filament."
	echo "$filex is empty. File moved to rejects. Stop processing on this filament." >> reject.log
	mv $filex rejects
else if ($ll < $llcor) then
	echo "$filex contains wrong # of LL. File moved to rejects. Stop processing on this filament."
	echo "$filex contains wrong # of LL. File moved to rejects. Stop processing on this filament." >> reject.log
	mv $filex rejects
else if ($xavg == 0) then
	echo "$filex is missing amp info for last LL. File moved to rejects. Stop processing on this filament."
	echo "$filex is missing amp info for last LL. File moved to rejects. Stop processing on this filament." >> reject.log
	mv $filex rejects
else if ($phsavg == 0) then
	echo "$filex is missing phase info for last LL. File moved to rejects. Stop processing on this filament."
	echo "$filex is missing phase info for last LL. File moved to rejects. Stop processing on this filament." >> reject.log
	mv $filex rejects
else if ($phsavg == 180) then
	echo "$filex is missing phase info for last LL. File moved to rejects. Stop processing on this filament."
	echo "$filex is missing phase info for last LL. File moved to rejects. Stop processing on this filament." >> reject.log
	mv $filex rejects
endif

set i=`ee $i + 1`
end

ls -1 *ner *far > $infile
set linex = `wc -l $infile | awk '{print $1}'`
echo $linex

exit
