; window particles from micrographs
; then normalize, filter, cen, mask
; version 20090204

FR L  ;directory containing particle coordinates (dcu**** and dct****)
[pikdir]mics
FR L  ;template for micrographs
[mictmpl]mics/****
FR L  ;list of micros that were picked
[miclist]mics/miclist
FR L  ;output directory to receive particle stack
[pcldir]ser2
FR L  ;50% larger than particle (in pixels)
[boxsize]80
;Boxsize tips:
; my pixel size was 7um/pix * 3xbin / 50000x mag = 4.2A/pix
; my protein is 225A / 4.2A/pix = 54pix diameter
; my boxsize is 54pix * 1.5 =~ 80

x24=4.2  ;A/pix
x25=21   ;lp-filter (A)
x26=330  ;hp-filter (A)

; ~~~~~ start ~~~~~
MD
SET MP
(0)

;---window and normalize particles - use larger window
x21=int(2.5*[boxsize]/6) ;normalization radius halfway between particle and box edge
x23=int([boxsize]/1.5)*2
FR L
[initialbox]{%F7.1%x23}
FR L
[normradius]{%F7.1%x21}
VM
echo Particles normalized using densities beyond a radius of [normradius] pixels.

MO ;make gaussian noise file for histogram matching
_15
(1000,1000,1)
R ;random
Y ;gaussian
(500,50) ;mean,stdev

@wintiltpair
[miclist]          ;list of micros
[mictmpl]          ;directory of micros
[pikdir]/dct****   ;tiltcords
[pikdir]/dcu****   ;untlcords
_15                ;noisefile
([initialbox])        ;box-size
([normradius])     ;particle radius for normalization
(4)                ;coordinate decimation factor
[pcldir]           ;output dir for stack, ulist and tlist

DE
_15

AS R
[pcldir]/seru@******
[pcldir]/serulist
A
[pcldir]/seruav
[pcldir]/seruva

AS R
[pcldir]/sert@******
[pcldir]/sertlist
A
[pcldir]/sertav
[pcldir]/sertva

VM
echo ____ Check [pcldir]/seruav to be sure average of particle stack is OK. _____

;---filter particles
@filter(x25,x26,x24)
[pcldir]/serulist
[pcldir]/seru@******
[pcldir]/fseru@******

@filter(x25,x26,x24)
[pcldir]/sertlist
[pcldir]/sert@******
[pcldir]/fsert@******

AS R
[pcldir]/fseru@******
[pcldir]/serulist
A
[pcldir]/fseruav
[pcldir]/fseruva

AS R
[pcldir]/fsert@******
[pcldir]/sertlist
A
[pcldir]/fsertav
[pcldir]/fsertva

VM
echo ____ Check [pcldir]/fseruav to be sure average of filtered particle stack is OK. _____

;---center and crop stack
@centerbymirrors(x31,x32)
[pcldir]/fseruav
_10
DE
_10

x30=0 ;rotation
x31=int(x31) ;x-shift
x32=int(x32) ;y-shift
x33=1 ;key
;      rt ,xsh,ysh
SD x33,x30,x31,x32
[pcldir]/cg_doc
SD E
[pcldir]/cg_doc

FS
[pcldir]/fseruav
FI x33
[pcldir]/fseruav
(12)

UD N x34
[pcldir]/serulist
UD E
MS I
_10@
x33,x33,(1)
x34
x34

@rtsq_ic
(5) ;all
[pcldir]/serulist
[pcldir]/cg_doc
[pcldir]/fseru@******
_10@******

x35=int((x33-x20)/2) ;top left
@crop(x35,x35,x20,x20) ;[topx,topy,xsize,ysize]
[pcldir]/serulist
_10@******
[pcldir]/cfseru@******

DE
_10

AS R
[pcldir]/cfseru@******
[pcldir]/serulist
A
[pcldir]/cfseruav
[pcldir]/cfseruva

VM
echo ____ Check mfseruav to be sure average of masked-filtered particle stack is OK. _____

@centerbymirrors(x31,x32)
[pcldir]/fsertav
_10
DE
_10

x30=0 ;rotation
x31=int(x31) ;x-shift
x32=int(x32) ;y-shift
x33=1 ;key
;      rt ,xsh,ysh
SD x33,x30,x31,x32
[pcldir]/cg_doc
SD E
[pcldir]/cg_doc

FS
[pcldir]/fsertav
FI x33
[pcldir]/fsertav
(12)

UD N x34
[pcldir]/sertlist
UD E
MS I
_10@
x33,x33,(1)
x34
x34

@rtsq_ic
(5) ;all
[pcldir]/sertlist
[pcldir]/cg_doc
[pcldir]/fsert@******
_10@******

x35=int((x33-x20)/2) ;top left
@crop(x35,x35,x20,x20) ;[topx,topy,xsize,ysize]
[pcldir]/sertlist
_10@******
[pcldir]/cfsert@******

DE
_10

AS R
[pcldir]/cfsert@******
[pcldir]/sertlist
A
[pcldir]/cfsertav
[pcldir]/cfsertva

VM
echo ____ Check mfseruav to be sure average of masked-filtered particle stack is OK. _____

;---make mask for corners of particles
x27=[boxsize]*2     ;make 2x larger for filter
x28=[boxsize]+0.5   ;center of box
x29=[boxsize]*3/5   ;radius - just cuts corners
PT
_11
x27,x27
C
x28,x28
x29
N

x29=[boxsize]/10 ;filterwidth
BC
_11
_12
L   ;lowpass
x29,x29
(1) ;weight

x29=[boxsize]/2 ;topleft
WI
_12
_13 
([boxsize],[boxsize])
x29,x29

FS
_13
FI x27,x28
_13
(7,8) ;max,min
x29=(1/(x27-x28)) ;slope
x30=0-(1/(x27-x28))*x28 ;intercept
AR ;rescale after filter
_13
[pcldir]/fcirclemask
P1*x29+x30

DE
_11
DE
_12
DE
_13

@maskcenter
[pcldir]/serulist
[pcldir]/cfseru@******
[pcldir]/fcirclemask
[pcldir]/mcfseru@******
[pcldir]/cgmfseru_doc

@maskcenter
[pcldir]/sertlist
[pcldir]/cfsert@******
[pcldir]/fcirclemask
[pcldir]/mcfsert@******
[pcldir]/cgmfsert_doc

AS R
[pcldir]/mcfseru@******
[pcldir]/serulist
A
[pcldir]/mcfseruav
[pcldir]/mcfseruva

AS R
[pcldir]/mcfsert@******
[pcldir]/sertlist
A
[pcldir]/mcfsertav
[pcldir]/mcfsertva

VM
echo ____ Check mcfseruav to be sure average of masked-filtered particle stack is OK. _____

VM
echo Now you are ready to begin alignment and classification of particles. Calculating suitable radius...
@findradius[x98]
[pcldir]/mcfseruav
@findradius[x99]
[pcldir]/mcfseruva
x99=int((x99+x98)/2)
VM
echo ____ You might like to use a radius of {%F7.1%x99} for your particle alignment. ____

VM
echo "     ***** Good luck, we are all counting on you! *****"

EN D
