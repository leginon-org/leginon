(x20) ;radius
; Syntax: @makemask(radius)
; Description:
;   1)normalize variance va>vn
;   2)add variance and avg av+vn=avn
;   3)threshold using specified radius
;   4)mask outside specified radius

FR
?IN.Class average (dir/img)?<avg>
FR
?IN.Class variance (dir/img)?<var>
FR
?OUT.Mask (dir/img)?<out>

; ~~~~~ start ~~~~~

x99=0
IQ FI x99
<out>
IF(x99.eq.1)THEN
  VM
  echo -n <out> already exists..overwriting..
  DE
  <out>
ENDIF

FS
<avg>
FI x21
<avg>
(12)

MO
_1  ;circular mask
x21,x21,(1)
C   ;circle
x20 ;radius

;find std and mean inside mask
FS M x31,x32,x33,x34
<avg>
_1 ;circle
FS M x41,x42,x43,x44
<var>
_1 ;circle

AR
<var>
_2
(P1-x43+x33)*x34/x44 ;(p1-mean1+mean2)*std2/std1

AD
<avg>
_2 ;vn
_3 ;avn
*

;---invert and threshold
AR ;invert mask
_1 ;circle
_4 ;invcircle
(P1-1)*(-1)

FS M x31,x32,x33,x34
_3 ;avn
_1 ;circle
FS M x41,x42,x43,x44
_3 ;avn
_4 ;invcircle

;set threshold 1/3 from mean inside to mean outside circle
x30=(2*x33+x43)/3

TH M
_3 ;avn
_2 ;<out>
B
x30

MU
_2 ;th(avn)
_1 ;circle
<out>
*

DE
_1
DE
_2
DE
_3
DE
_4

VM
echo Mask file <out> created.

RE
