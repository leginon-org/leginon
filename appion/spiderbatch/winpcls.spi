;THIS ROUTINE ASSUMES THAT BAD PARTICLES WERE REMOVED AND A NEW COORDINAT FILES
;WERE WRITTEN TO ONE FOLDER, E.G. folder/corrd-doc{microgr###}.

FR
?IN.List of Micros (dir/miclist)?[miclist]
FR
?IN.Micros template (dir/mic****)?[mictmpl]
FR
?IN.Particle coordinates template (dir/cord****)?[cordtmpl]
FR
?IN.Noise file (dir/noise)?[noise]
RR x23
?IN.Particle window size (50% larger than pcl radius)?
RR x29
?IN.Radius for particle normalization (larger than pcl radius)?
RR x90
?IN.Decimation factor of particle coordinates (4)?
FR
?OUT.Output folder to make (dir)?[outdir]

; ~~~~~ start ~~~~~

x30=INT( ((2*(x23**2))**0.5) / 2) ;distance from window center to corner
VM
echo Window center to corner is {%F7.1%x30}'pixels, Normalization radius is '{%F7.1%x29}
x30=INT( ((2*(x23**2))**0.5) * (0.9/2)) ; 90% distance from center to corner
IF(x29.ge.x30)THEN
  x29=INT(x23 * 0.9 / 2) ;new normalization radius
  VM
  echo '*** Normalization radius is too big..using'{%F7.1%x29}'***'
  IF(x29.lt.1)THEN
    VM
    echo ERROR...radius is too small.
    EN
  ENDIF
ENDIF
x24=x23

MD
VB OFF

VM
mkdir [outdir]

; RAMP AND COPY NOISE FILE TO MEMORY
RA
[noise]
_1 ;ramped noise

; CHECK FOR NaN IN RAMPED NOISE
FS
_1
FI x69
[noise]
(9) ;avg
IF(x69.gt.0)GOTO LB17
IF(x69.le.0)GOTO LB17
  VM
  echo Noise file has ramping error.
  EN
LB17

; MAKE A MASK FILE
MO
_2
x23,x24
C
x29
; INVERT MASK - PIXELS OF THE PARTICLE ARE EXCLUDED FROM NORMALIZATION
NEG
_2
_3

; WINDOW THE PARTICLES FROM THE INPUT MICROGRAPH 
x33 = INT(x23/2)+1  ; nsam center
x34 = INT(x24/2)+1  ; nrow center
x70=0    ;"GLOBAL" PARTICLE COUNTER
x71=0    ;SKIPPED PARTICLE COUNTER

SD IC NEW
serlist_ic
(5,999999) ;ser,mic,x,y,pic

UD N x61
[miclist]
DO LB1 x11=1,x61  ; for each micro in microsdoc
  UD IC x11,x62
  [miclist]

  x99=0
  IQ FI x99
  [cordtmpl]x62
  IF(x99.eq.0)THEN
    VM
    echo ' *** 'Coordinate file does not exist for micro {%F7.1%x62}' *** '
    GOTO LB90 ;skip to next micro
  ELSE
    VM
    echo -n Micro{%F7.1%x62}..
  ENDIF

  UD N x38
  [cordtmpl]x62
  x25=0               ;SET LOCAL PARTICLE COUNTER (KEYS)

  FS
  [mictmpl]x62
  FI x80,x81 ; find dimensions of micro
  [mictmpl]x62
  (12),(2)

  DO LB2 x12 = 1,x38 ;for each particle
     UD IC x12,x27,x28 ;web writes:x,y ;autopic writes: x y pcl# cc
     [cordtmpl]x62

     x82 = ((x27*x90) + x33) ; bottom right x
     x83 = ((x28*x90) + x34) ; bottom right y
     x84 = ((X27*x90) - x33) ; top left x
     x85 = ((X28*x90) - x34) ; top left y
     ; if beyond edge of micro then skip this particle
     IF(x82.gt.x80)GOTO LB50
     IF(x83.gt.x81)GOTO LB50
     IF(x84.lt.1)GOTO LB50
     IF(x85.lt.1)GOTO LB50

     WI
     [mictmpl]x62
     _4
     x23,x24
     x84,x85
     FS
     _4

     RA
     _4 ;windowed particle
     _5

     x25=x25+1 ; increment local counter
     x70=x70+1 ; increment global counter

     ; NORMALIZE AS PER HISTOGRAM
     CE FIT
     _1  ; ramped noise
     _5  ; ramped particle
     _3  ; inverted mask
     [outdir]/ser@{******x70}

     ;         ser,mic, x , y ,pic
     SD IC x70,x70,x62,x27,x28,x12
     serlist_ic ;[outdir]/serlist

     GOTO LB51 ;windowed successfully
     LB50 ; SKIPPED PARTICLE
       x71=x71+1 ; skipped particle counter
     LB51 ;windowed successfully
  LB2 ;next particle
  UD ICE
  [cordtmpl]x62

  VM
  echo .{%F7.1%x25} of {%F7.1%x38} particles windowed.

  LB90 ;skip to next micro
LB1 ;next micro
SD IC COPY
serlist_ic
[outdir]/serlist
SD IC END
serlist_ic
UD ICE
[miclist]

DE
_1
DE
_2
DE
_3
DE
_4
DE
_5

VM
echo {%F7.1%x71} particles excluded because windows extended outside their micros.
VM
echo {%F7.1%x70} particles remaining have been windowed...Good luck!

RE
