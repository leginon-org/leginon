; refgrp.spi Ed Brignole version 20090213
; groups particles into classes after reference alignment
; rotates/mirrors images according to alignment
; generates class averages

; output:
;   grp_count: key,ref,num+,num-
;   grp*** : key,pclnum,rt,xsh,ysh,ref&mr = SAP format
;   avg*** : class average
;   var*** : class variance

RR x49  ; [format]
?IN.TYPE OF ALIGMNENT (APSH=1,APNQ=2)?
FR
?IN.ALIGNMENT DOC (dir/apshdoc)?[alndoc]
FR
?IN.TEMPLATE OF PARTICLES TO BE AVERAGED (dir/ser*****)?[pcltmpl]
FR
?OUT.EXISTING OUTPUT DIRECTORY (dir)?[alndir]

; ~~~~~ start ~~~~~
x99=0
IQ FI x99
[alndir]/grp_count
IF(x99.eq.1)THEN
  DE
  [alndir]/grp_count
ENDIF

SD /     class      positive      mirror
[alndir]/grp_count

x99=0
IQ FI x99
_1
IF(x99.eq.1)THEN
  VM
  echo 'ERROR.. _1 already exists! Use _(>10) in your procedures because scripts use _(<10).'
  EN
ENDIF

; CLASS TRACKER
x44=0 ;classnum tracker
x20=0 ;class counter

IF(x49.eq.1)THEN ;;;;;;;;;;;;BEGIN APSH SORTING AND COUNTING MODULE;;;;;;;;;;;;
  VM
  echo -n Sorting APSH format [alndoc] into classes..

  DOC SORT ; sort by image number
  [alndoc]
  [alndir]/apsh_tmp
  (5) ; image is 5th register for apsh
  Y

  UD N x41
  [alndir]/apsh_tmp
  ;         psi,tta,phi,ref,img,rt ,xsh,ysh,npj,ang,ccc,psi,xsh,ysh,mr
  UD IC x41,x21,x22,x23,x24,x37,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35
  [alndir]/apsh_tmp
  FS
  [pcltmpl]x37
  FI x36
  [pcltmpl]x37
  (12)
  UD ICE
  [alndir]/apsh_tmp
  DE
  [alndir]/apsh_tmp

  x99=0
  IQ FI x99
  [alndir]/apsh_tmp
  IF(x99.eq.1)THEN
    VM
    echo ERROR...apsh_tmp was not deleted.
  ENDIF

  DOC SORT
  [alndoc]
  [alndir]/apsh_tmp
  (4)    ; sort by refnum
  Y

  UD N,x41
  [alndir]/apsh_tmp
  DO LB1 x11=1,x41  ; FOR EACH PARTICLE
    ;         psi,tta,phi,ref,img,rt ,xsh,ysh,npj,ang,ccc,psi,xsh,ysh,mr
    UD IC x11,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35
    [alndir]/apsh_tmp

    x25=abs(x25) ; ADJUSTS FOR DIFFERENT SPIDER VERSIONS

    IF (x44.LT.x24) THEN  ; THIS IS A NEW CLASS
      ; CLOSE PREVIOUS CLASS AND WRITE COUNTER
      IF(x11.gt.1)THEN ;(NOT ON FIRST LOOP)
        x20=x20+1 ; increment class counter
        SD x20,x44,x42,x43
        [alndir]/grp_count
        IF(x45.gt.0)THEN ;there are particles in this class
          SD IC COPY
          grpdoc_ic
          [alndir]/grp{***x44}
          SD IC END
          grpdoc_ic
          AS R
          _1@****** ;[alndir]/rtp@******   ;
          [alndir]/grp{***x44}
          A
          [alndir]/avg{***x44}
          [alndir]/var{***x44}
        ENDIF ;prior class had particles
        DE
        _1
      ENDIF ;not first loop

      MS I
      _1@
      x36,x36,(1) ;size
      x41      ; numpcls
      x37      ; maxnum

      ; RESET COUNTERS
      x42=0 ; NONMIRROR COUNTER
      x43=0 ; MIRROR COUNTER
      x45=0 ; MR+NM COUNTER
      SD IC NEW
      grpdoc_ic
      (5),x41
      x44=x24 ; update to new class
    ENDIF ; new class 

    x45=x45+1
    IF (x35.ge.0) THEN  ; NOT MIRRORED
      x35=x24
      x42=x42+1  ; increment nonmirror particle counter

      RT SQ
      [pcltmpl]x25
      _1@{******x25}   ;[alndir]/rtp@{******x25}   ;
      x26,(1.0)
      x27,x28
    ELSE  ; MIRRORED (rotate/shift then mirror)
      x35=-1*x24
      x43=x43+1   ; increment mirror particle counter

      RT SQ
      [pcltmpl]x25
      _2 ;[alndir]/rtp@{******x25}
      x26,(1.0)
      x27,x28

      MR
      _2
      _1@{******x25}   ;[alndir]/rtp@{******x25}
      Y ;yaxis
    ENDIF ; MIRRORED/NOT-MIRRORED
    ;     key,pcl,rt ,xsh,ysh,grpmr
    SD IC x45,x25,x26,x27,x28,x35
    grpdoc_ic  ;[alndir]/grp{***x44}  
  LB1  ; END LOOP FOR EACH PARTICLE
  ; CLOSE ALIGNMENT DOC
  UD ICE
  [alndir]/apsh_tmp
  DE
  [alndir]/apsh_tmp

  ; CLOSE CLASS LIST
  x20=x20+1
  SD x20,x44,x42,x43
  [alndir]/grp_count
  SD E
  [alndir]/grp_count

  ; SAVE LAST CLASS
  SD IC COPY
  grpdoc_ic
  [alndir]/grp{***x44}
  SD IC END
  grpdoc_ic ; [alndir]/grp+{***x44} 

  AS R
  _1@****** ;[alndir]/rtp@******   ;
  [alndir]/grp{***x44}
  A
  [alndir]/avg{***x44}
  [alndir]/var{***x44}

  ;CP
  ;_1@
  ;[alndir]/rtp@
  DE
  _1

  GOTO LB90
ENDIF  ;;;;;;;;;;END APSH SORTING AND COUNTING MODULE;;;;;;;;

IF(x49.eq.2)THEN ;;;;;;;;;;;;BEGIN APNQ SORTING AND COUNTING MODULE;;;;;;;;;;;;
  VM
  echo -n Sorting APNQ format [alndoc] into classes..

  DOC SORT ; sort by image number
  [alndoc]
  [alndir]/apnq_tmp
  (6) ; image is 6th register for apnq
  Y

  UD N x41
  [alndir]/apnq_tmp
  ;         ref,ccc,rt ,xsh,ysh,img
  UD IC x41,x24,x31,x26,x27,x28,x37
  [alndir]/apnq_tmp
  FS
  [pcltmpl]x37
  FI x36
  [pcltmpl]x37
  (12)
  UD ICE
  [alndir]/apnq_tmp
  DE
  [alndir]/apnq_tmp

  x99=0
  IQ FI x99
  [alndir]/apnq_tmp
  IF(x99.eq.1)THEN
    VM
    echo ERROR...apnq_tmp was not deleted.
  ENDIF

  DOC SORT ; sort by reference number
  [alndoc]
  [alndir]/apnq_tmp
  (1) ; reference is 1st register for apnq but 4th for apsh
  Y

  DO LB2 x11=1,x41 ; for each aligned particle
    ;         ref,ccc,rt ,xsh,ysh,img
    UD IC x11,x24,x31,x26,x27,x28,x25
    [alndir]/apnq_tmp

    IF (x44.LT.x24) THEN  ; THIS IS A NEW CLASS
    ; CLOSE PREVIOUS CLASS AND WRITE COUNTER
      IF(x11.gt.1)THEN ;(NOT ON FIRST LOOP)
        x20=x20+1
        SD x20,x44,x42,x43  ; classnum,countnm,countmr
        [alndir]/grp_count
        IF(x42.gt.0)THEN ;there are particles in this class
          SD IC COPY
          grpdoc_ic
          [alndir]/grp{***x44}
          SD IC E
          grpdoc_ic
          AS R
          _1@****** ;[alndir]/rtp@******
          [alndir]/grp{***x44}
          A
          [alndir]/avg{***x44}
          [alndir]/var{***x44}
        ENDIF
        DE
        _1
      ENDIF ;skip to here on first loop

      MS I
      _1@
      x36,x36,(1) ;size
      x41         ;numpcls in stack (x41) - use maxnum (x37)
      x37         ;maxnum

      ; RESET COUNTERS
      x42=0 ; NONMIRROR COUNTER
      x43=0 ; MIRROR COUNTER
      x44=x24
    ENDIF

    ; NONMIRROR CLASS COUNTER
    IF (x42.EQ.0) THEN
      SD IC NEW
      grpdoc_ic
      (5),x41
    ENDIF

    x42=x42+1
    ;     key,pcl,rt ,xsh,ysh,ref
    SD IC x42,x25,x26,x27,x28,x44
    grpdoc_ic  ;[alndir]/grp{***x44}

    RT SQ
    [pcltmpl]x25
    _1@{******x25} ;[alndir]/rtp@{******x25}
    x26,(1.0)
    x27,x28
  LB2  ; END LOOP FOR EACH PARTICLE
  ; CLOSE ALIGNMENT DOC
  UD ICE
  [alndir]/apnq_tmp
  DE
  [alndir]/apnq_tmp

  ; CLOSE SUMMARY DOC
  x20=x20+1
  SD x20,x44,x42,x43
  [alndir]/grp_count
  SD E
  [alndir]/grp_count

  ; SAVE LAST CLASS
  SD IC COPY
  grpdoc_ic
  [alndir]/grp{***x44}
  SD IC E
  grpdoc_ic

  AS R
  _1@****** ;[alndir]/rtp@******
  [alndir]/grp{***x44}
  A
  [alndir]/avg{***x44}
  [alndir]/var{***x44}

  ;CP
  ;_1@
  ;[alndir]/rtp@
  DE
  _1

  GOTO LB90
ENDIF ;;;;;;;;;;END APNQ SORTING AND COUNTING MODULE;;;;;;;;

VM
echo ERROR...invalid alignment format.

LB90 ;completed
VM
echo '.class averages, variances, and particle lists written.'

RE
