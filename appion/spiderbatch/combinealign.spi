; Syntax: @combinealign
; Description: sum alignment parameters
;   for each parameter in second alignment
;   find and combine with prior alignment parameter
;   !!order of transformations is essential!!
; Output:
;   doc in PRXYM format (pclnum,rt,xsh,ysh,mr/class)
;
; Alignment formats:
;   1)APSH/APREF (15) takes rt=12,x=13,y=14,pcl=5,mr=15,grp=4
;   2)APXQ (7) takes rt=3,x=4,y=5,pcl=6,mr=1,grp=1
;   2)PRXYM (5) takes rt=2,x=3,y=4,pcl=1,mr=5,grp=5
;   4)SAP (4) takes rt=2,x=3,y=4,pcl=1
;   3)APSR (3) takes rt=1,x=2,y=3,pcl from pcllist_doc reg 1
;   5)ALL (3) takes rt,x,y from regs 1,2,3 first key only

FR
?IN.First transformation doc (dir/doc)?<doc1>

UD N x21,x22 ;keys,cols
<doc1>
IF(x21.gt.1)THEN
  IF(x22.eq.3)THEN
    FR
    ?IN.List of images (dir/doc)?<list1>
  ENDIF
ENDIF

FR
?IN.2nd transformation doc (dir/doc)?<doc2>

UD N x23,x24 ;keys,cols
<doc2>
IF(x23.gt.1)THEN
  IF(x24.eq.3)THEN
    FR
    ?IN.List of images (dir/doc)?<list2>
  ENDIF
ENDIF

FR
?OUT.Combined tranformation doc (dir/doc)?<outdoc>


; ~~~~~ start ~~~~~
VM
echo 'Combining alignments:'
VM
echo -n '  '<doc1>
; --- sort doc1 by particle number
IF(x22.eq.15)THEN  ;apsh format
  DOC SORT
  <doc1>      ;input doc
  <doc1>sort  ;output doc  ;tempdoc1sort
  (5)         ;sort by particle number
  y           ;renumber keys
  
  UD N x21,x22
  <doc1>sort
  
  VM
  echo ' has '{%F9.1%x21}' parameters in APSH format.'
  
  GOTO LB90
ENDIF

IF(x22.eq.7)THEN  ;apxq format
  DOC SORT
  <doc1>      ;input doc
  <doc1>sort  ;output doc  ;tempdoc1sort
  (6)         ;sort by particle number
  y           ;renumber keys
  
  UD N x21,x22
  <doc1>sort
  
  VM
  echo ' has '{%F9.1%x21}' parameters in APXQ format.'
  
  GOTO LB90
ENDIF

IF(x22.eq.5)THEN  ;prxym format
  DOC SORT
  <doc1>      ;input doc
  <doc1>sort  ;output doc  ;tempdoc1sort
  (1)         ;sort by particle number
  y           ;renumber keys
  
  UD N x21,x22
  <doc1>sort
  
  VM
  echo ' has '{%F9.1%x21}' parameters in PRXYM format.'
  
  GOTO LB90
ENDIF

IF(x22.eq.4)THEN  ;prxy format
  DOC SORT
  <doc1>      ;input doc
  <doc1>sort  ;output doc  ;tempdoc1sort
  (1)         ;sort by particle number
  y           ;renumber keys
  
  UD N x21,x22
  <doc1>sort
  
  VM
  echo ' has '{%F9.1%x21}' parameters in PRXY format.'
  
  GOTO LB90
ENDIF

IF(x22.eq.3)THEN  ;apsr/all format
  IF(x21.eq.1)THEN
    VM
    echo ' has one parameter that applies to all particles.'

    UD 1,x56,x57,x58
    <doc1>
    UD E
  ELSE ;apsr
    UD N x31
    <list1>
    IF(x21.ne.x31)THEN
      VM
      echo ERROR..Different number of particles in APSR alignment doc and image list
      EN
    ENDIF
    ;make apsrdoc with particle numbers
    SD IC NEW
    alndoc1_ic
    (5),x21  ;registers,keys
    x59=0 ;no class
    DO LB3 x13=1,x21
      UD IC x13,x41
      <list1>
      UD IC x13,x56,x57,x58
      <doc1>
      SD IC x13,x41,x56,x57,x58,x59
      alndoc1_ic
    LB3  ;next particle x41
    UD ICE
    <list1>
    UD ICE
    <doc1>
    
    SD IC COPY
    alndoc1_ic
    <doc1>temp
    SD IC E
    alndoc1_ic
    
    DOC SORT
    <doc1>temp  ;input doc
    <doc1>sort  ;output doc  ;tempdoc1sort
    (1)         ;sort by particle number
    y           ;renumber keys

    DE
    <doc1>temp
    
    UD N x21,x22
    <doc1>sort
    
    VM
    echo ' has '{%F9.1%x21}' parameters in APSR format.'
  ENDIF
  GOTO LB90
ENDIF

VM
echo ERROR..Alignment params have unrecognized format with {**x22} columns.
EN

LB90 ;alignment format found

; --- sort doc2 by particle number
VM
echo -n '  '<doc2>

IF(x24.eq.15)THEN  ;apsh format
  DOC SORT
  <doc2>      ;input doc
  <doc2>sort  ;output doc  ;tempdoc2sort
  (5)         ;sort by particle number
  y           ;renumber keys
  
  UD N x23,x24
  <doc2>sort
  
  VM
  echo ' has '{%F9.1%x23}' parameters in APSH format.'
  
  GOTO LB91
ENDIF

IF(x24.eq.7)THEN  ;apxq format
  DOC SORT
  <doc2>      ;input doc
  <doc2>sort  ;output doc  ;tempdoc2sort
  (6)         ;sort by particle number
  y           ;renumber keys
  
  UD N x23,x24
  <doc2>sort
  
  VM
  echo ' has '{%F9.1%x23}' parameters in APXQ format.'
  
  GOTO LB91
ENDIF

IF(x24.eq.5)THEN  ;prxym format
  DOC SORT
  <doc2>      ;input doc
  <doc2>sort  ;output doc  ;tempdoc2sort
  (1)         ;sort by particle number
  y           ;renumber keys
  
  UD N x23,x24
  <doc2>sort
  
  VM
  echo ' has '{%F9.1%x23}' parameters in PRXYM format.'
  
  GOTO LB91
ENDIF

IF(x24.eq.4)THEN  ;prxy format
  DOC SORT
  <doc2>      ;input doc
  <doc2>sort  ;output doc  ;tempdoc2sort
  (1)         ;sort by particle number
  y           ;renumber keys
  
  UD N x23,x24
  <doc2>sort
  
  VM
  echo ' has '{%F9.1%x23}' parameters in PRXY format.'
  
  GOTO LB91
ENDIF

IF(x24.eq.3)THEN  ;apsr/all format
  IF(x23.eq.1)THEN
    VM
    echo ' has one parameter that applies to all particles.'
    
    UD 1,x26,x27,x28
    <doc2>
    UD E
  ELSE
    UD N x32
    <list2>
    IF(x23.ne.x32)THEN
      VM
      echo ERROR..Different number of particles in APSR alignment doc and image list
      EN
    ENDIF
    ;make apsrdoc with particle numbers
    SD IC NEW
    alndoc2_ic
    (5),x23  ;registers,keys
    x29=0 ;no class
    DO LB4 x14=1,x23
      UD IC x14,x42
      <list2>
      UD IC x14,x26,x27,x28
      <doc2>
      SD IC x14,x42,x26,x27,x28,x29
      alndoc2_ic
    LB4  ;next particle x42
    UD ICE
    <list2>
    UD ICE
    <doc2>
    
    SD IC COPY
    alndoc2_ic
    <doc2>temp
    SD IC E
    alndoc2_ic
    
    DOC SORT
    <doc2>temp  ;input doc
    <doc2>sort  ;output doc  ;tempdoc2sort
    (1)         ;sort by particle number
    y           ;renumber keys
    
    DE
    <doc2>temp
    
    UD N x23,x24
    <doc2>sort
    
    VM
    echo ' has '{%F9.1%x23}' parameters in APSR format.'
  ENDIF
  GOTO LB91
ENDIF

VM
echo ERROR..Alignment params have unrecognized format with {**x24} columns.
EN

LB91 ;alignment format found

; --- write output file
SD IC NEW
outdoc_ic
(5),x21 ;registers,keys - not more than first alignment

x50=1  ;key number of current particle in 1st doc
x51=0  ;key counter for <outdoc>
x29=1  ;no class in 2nd alignment
x59=1  ;no class in 1st alignment

DO LB1 x11=1,x23  ;for each particle in 2nd alignment
  x42=0  ;particle number in 2nd doc
  IF(x24.eq.15)THEN  ;apsh format
    UD IC x11,x81,x82,x83,x29,x42,x86,x87,x88,x89,x90,x91,x26,x27,x28,x95
    <doc2>sort
    x29=abs(x29)*(x95/abs(x95))
  ENDIF
  IF(x24.eq.7)THEN  ;apxq format
    UD IC x11,x29,x82,x26,x27,x28,x42
    <doc2>sort
  ENDIF
  IF(x24.eq.5)THEN  ;prxym format
    UD IC x11,x42,x26,x27,x28,x29
    <doc2>sort
  ENDIF
  IF(x24.eq.4)THEN  ;prxy format
    UD IC x11,x42,x26,x27,x28
    <doc2>sort
  ENDIF
  
  ;VM
  ;echo Particle {%F7.1%x42} from 2nd doc
  
  DO LB2 x12=x50,x21 ;for each particle in 1st alignment
    x41=0  ;particle number in 1st doc
    IF(x22.eq.15)THEN  ;apsh format
      UD IC x12,x81,x82,x83,x59,x41,x86,x87,x88,x89,x90,x91,x56,x57,x58,x95
      <doc1>sort
      x59=abs(x59)*(x95/abs(x95))
    ENDIF
    IF(x22.eq.7)THEN  ;apxq format
      UD IC x12,x59,x82,x56,x57,x58,x41
      <doc1>sort
    ENDIF
    IF(x22.eq.5)THEN  ;prxym format
      UD IC x12,x41,x56,x57,x58,x59
      <doc1>sort
    ENDIF
    IF(x22.eq.4)THEN  ;prxy format
      UD IC x12,x41,x56,x57,x58
      <doc1>sort
    ENDIF
    
    ;VM
    ;echo '  'Particle {%F7.1%x41} from 1st doc
    
    LB97

    IF(x24.eq.3)x42=x41  ;if 2nd format is manual (2nd pclnum x42 = 1st pclnum x41)
    IF(x22.eq.3)x41=x42  ;if 1st format is manual (1st pclnum x41 = 2nd pclnum x42)
    
    IF(x41.eq.x42)THEN ;found both alignments
      ;convert from rt-sh-mr to mr-rt-sh for SA 3 below
      ;1st alignment
      IF(x59.eq.0)x59=1
      x60=(-90*(x59/abs(x59)))+90 ;convert mirror to theta 1->0,-1->180
      x56=x56*(x59/abs(x59)) ;reverse rotation 
      x57=x57*(x59/abs(x59)) ;reverse x-shift 

      x40=0
      SA 3 x34,x35,x36,x37,x38,x39
      x40,x60,x56 ;phi,tta,psi = 0 mr inplane
      x57,x58,x40 ;x,y,z
      x40,x40,x26 ;phi,tt,psi
      x27,x28,x40 ;x,y,z
      
      x35=((-1/90)*abs(x35)+1) ;convert from theta=0/180 to +/-1
      x37=x37*x35
      ;convert back to rt-sh-mr
      IF(x34.eq.0)THEN ;rt=psi: params are mr-rt-sh
        x36=x36*x35 ;rotation
      ELSE ;rt=phi: params are rt-mr-sh
        x36=x34
      ENDIF
      
      x39=abs(x29) ;2nd class
      IF(x29.eq.0)x39=abs(x59) ;if 2nd class was null, use first class
      
      IF(x29.eq.0)x29=1
      x35=x35*(x29/abs(x29)) ;final mirror is 1st mirror * 2nd mirror
      x39=x39*x35 ;put sign on class

      x51=x51+1  ;increment key counter
      ;         pcl,rt ,xsh,ysh,clm
      SD IC x51,x41,x36,x37,x38,x39
      outdoc_ic
      
      IF(x24.ne.3)THEN
        x50=x12+1
        GOTO LB98
      ENDIF
    ENDIF ;found particle x42 in 1st doc
  LB2  ;next particle in 1st doc (x41)
  
  IF(x24.eq.3)GOTO LB97 ;2nd doc has one param - exit LB1
  VM
  echo 'ERROR: Particle' {******x41} not found in <doc1>
  EN

  LB98  ;particle was found in 1st doc

LB1  ;next particle in 2nd doc x42
LB97 ;escape 2nd doc

IF(x22.ne.3)THEN
  UD ICE
  <doc1>sort
  DE
  <doc1>sort
ENDIF
IF(x24.ne.3)THEN
  UD ICE
  <doc2>sort
  DE
  <doc2>sort
ENDIF

SD IC COPY
outdoc_ic
<outdoc>
SD IC E
outdoc_ic

VM
echo '  Wrote' <outdoc> 'in PRXYM format'

RE
