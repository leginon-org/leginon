; classvsclasssplit
; divides class lists into odd and even to do 2-way anova analysis
;
; output is odd and even class vs class table
;   prefix_table1 - odd particle table
;   prefix_table2 - even particle table

FR
?IN.Class list prefix (dir/pfx assumes _***v***)?[pfx]
FR
?IN.First class list (dir/list)?[list1]
FR
?IN.2nd class list (dir/list)?[list2]

; ~~~~~ start ~~~~~
UD N x21
[list1]
UD N x22
[list2]

VM
echo Split classes: {%F7.1%x21} columns by {%F7.1%x22} rows
BL
_1
x21,x22,(1) ;col,row
N
(0)

VM
echo ' ; '[pfx]_table1 > [pfx]_table1.txt
VM
echo ' ; '[pfx]_table2 > [pfx]_table2.txt

BL
_2
x21,x22,(1) ;col,row
N
(0)

DO LB1 x11=1,x21
UD IC x11,x31
[list1]

DO LB2 x12=1,x22
UD IC x12,x32
[list2]

x33=0 ;number odd
x34=0 ;number even

UD N x23
[pfx]_{***x31}v{***x32}
IF(x23.eq.0)GOTO LB3

DO LB3 x13=1,x23
UD IC x13,x35
[pfx]_{***x31}v{***x32}

x36=x35/2
x37=int(x36)
IF(x36.ne.x37)x33=x33+1 ;odd
IF(x36.eq.x37)x34=x34+1 ;even
LB3
UD ICE
[pfx]_{***x31}v{***x32}

RP
_1
x11,x12 ;i,j
x33

RP
_2
x11,x12
x34

VM
echo -n {%F7.1%x33}' ' >> [pfx]_table1.txt
VM
echo -n {%F7.1%x34}' ' >> [pfx]_table2.txt 

LB2 ;next list2
VM
echo ' ' >> [pfx]_table1.txt
VM
echo ' ' >> [pfx]_table2.txt

LB1 ;next list1
UD ICE
[list1]
UD ICE
[list2]

LI D
_1
[pfx]_table1
I   ;whole image
(1) ;slice

LI D
_2
[pfx]_table2
I
(1)

DE
_1
DE
_2

DE
[pfx]_temp1
DE
[pfx]_temp2

RE
