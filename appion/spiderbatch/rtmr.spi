; Syntax: @rtmr
; Description: 
;   Rotates and shifts particles according to the alignment parameters 
;   Automatically detects format of alignment parameters from number of registers
;     APSH=15regs, APXQ=7regs, PRXYM=5regs, SAP=4regs, ALL=1keys,3regs, APSR>1keys,3regs
;   For incore stacks, precede this script with MS for sequential stack or MS I for indexed stack

FR
?IN.Alignment parameters doc  (dir/alndoc)?<rtdoc>
UD N x11,x20 ;keys,regs
<rtdoc>
UD E
IF(x20.eq.3)THEN
  FR
  ?IN.List of particles (dir/list)?<pcllist>
ENDIF
FR
?IN.Particles template (dir/@*****)?<pcltmpl>
FR
?OUT.Transformed particles (dir/rtp@*****)?<outtmpl>

; ~~~~~ start ~~~~~
x22=1 ;scale factor

IF(x20.eq.15)THEN  ;apsh format
  VM
  echo -n Transforming {%F9.1%x11} particles using APSH alignment..

  DO LB1 x90=1,x11   ;FOR EACH PARTICLE
    ;     key,psi,tta,psi,grm,pcl,rts,xss,yss,npj,dif,cc ,rt ,xsh,ysh,mr
    UD IC x90,x41,x42,x43,x44,x21,x46,x47,x48,x49,x50,x51,x31,x32,x33,x55
    <rtdoc>
    
    RT SQ
    <pcltmpl>x21     ;IN
    _2
    x31,x22     ;ANGLE,SCALE
    x32,x33     ;X,Y
    
    IF(x55.lt.0)THEN
      MR
      _2
      <outtmpl>x21     ;OUT
      Y ;vertical axis (interchange columns)
    ELSE
      CP
      _2
      <outtmpl>x21     ;OUT
    ENDIF      
  LB1 ;next particle x21
  UD ICE
  <rtdoc>
  DE
  _2
  GOTO LB90
ENDIF

IF(x20.eq.7)THEN  ;apnq format
  VM
  echo -n Tranforming {%F9.1%x11} particles using APXQ alignment..
  
  DO LB2 x90=1,x11   ;FOR EACH PARTICLE
    ;     key,grm,cc ,rt ,xsh,ysh,pcl
    UD IC x90,x55,x42,x31,x32,x33,x21
    <rtdoc>
    
    RT SQ
    <pcltmpl>x21     ;IN
    _2
    x31,x22     ;ANGLE,SCALE
    x32,x33     ;X,Y
    
    IF(x55.lt.0)THEN
      MR
      _2
      <outtmpl>x21     ;OUT
      Y ;vertical axis (interchange columns)
    ELSE
      CP
      _2
      <outtmpl>x21     ;OUT
    ENDIF      
  LB2 ;next particle x21
  UD ICE
  <rtdoc>
  DE
  _2
  GOTO LB90
ENDIF

IF(x20.eq.5)THEN  ;apply same transformation to all particles
  VM
  echo -n Transforming {%F9.1%x11} particles according to PRXYM alignment..
  
  DO LB5 x90=1,x11   ;FOR EACH PARTICLE
    ;     key,pcl,rt ,xsh,ysh,grm
    UD IC x90,x21,x31,x32,x33,x55
    <rtdoc>
    
    RT SQ
    <pcltmpl>x21     ;IN
    _2
    x31,x22     ;ANGLE,SCALE
    x32,x33     ;X,Y
    
    IF(x55.lt.0)THEN
      MR
      _2
      <outtmpl>x21     ;OUT
      Y ;vertical axis (interchange columns)
    ELSE
      CP
      _2
      <outtmpl>x21     ;OUT
    ENDIF      
  LB5 ;next particle x21
  
  UD ICE
  <rtdoc>
  DE
  _2
  GOTO LB90
ENDIF

IF(x20.eq.4)THEN  ;sap cumulative format
  VM
  echo -n Transforming {%F9.1%x11} particles according to SAP alignment..

  DO LB4 x90=1,x11   ;FOR EACH PARTICLE
    ;     key,pcl,rt ,xsh,ysh
    UD IC x90,x21,x31,x32,x33
    <rtdoc>
  
    RT SQ
    <pcltmpl>x21     ;IN
    <outtmpl>x21     ;OUT
    x31,x22     ;ANGLE,SCALE
    x32,x33     ;X,Y
  LB4 ;next particle x21
  UD ICE
  <rtdoc>
  GOTO LB90
ENDIF

IF(x20.eq.3)THEN  ;apsr/all format
  UD N x12
  <pcllist>

  IF(x11.eq.1)THEN ;all format
    VM
    echo -n Transforming {%F9.1%x12} particles by same alignment..
    UD 1,x31,x32,x33
    <rtdoc>
    UD E
    
    DO LB7 x90=1,x12  ;FOR EACH PARTICLE
      UD IC x90,x21
      <pcllist>

      RT SQ
      <pcltmpl>x21     ;IN
      <outtmpl>x21     ;OUT
      x31,x22     ;ANGLE,SCALE
      x32,x33     ;X,Y
    LB7
  ELSE
    VM
    echo -n Transforming {%F9.1%x11} particles using APSR alignment..
    IF (x11.ne.x12) THEN
      VM
      echo ERROR...Number of particles and rotations not same
      EN
    ENDIF
    
    DO LB3 x90=1,x11   ;FOR EACH PARTICLE
      UD IC x90,x31,x32,x33
      <rtdoc>
      
      UD IC x90,x21
      <pcllist>
      
      RT SQ
      <pcltmpl>x21     ;IN
      <outtmpl>x21     ;OUT
      x31,x22     ;ANGLE,SCALE
      x32,x33     ;X,Y
    LB3 ;next particle x11
    UD ICE
    <rtdoc>
  ENDIF
  UD ICE
  <pcllist>
  GOTO LB90
ENDIF

VM
echo Alignment params have unrecognized format with {**x20} columns.

LB90

VM
echo .done.

RE
