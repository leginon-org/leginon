(x20,x22,x24) ; pixelsize(A/pix),boxsize(pix),lpfilter(A)
; Syntax: @pdb2spi(apix,size,filt)
; Description:
;   Copy pdb to spider volume
;   uses reference volume to apply centering
;     this is useful if you wish to preserve relative positions of fitted domains
;   Butterworth low pass filter [stop=2/3*pass]

FR
?IN.PDB file to convert (dir/file assumes.pdb)?<pdb>
FR
?IN.Reference pdb for centering (dir/file assumes.pdb)?<ref>

; ~~~~~ start ~~~~~

x23=INT(x22*10/x20) ; initial box dimensions depend on pixel size

CP FROM PDB
<ref>.pdb
x20
N ;nocenter
A
x23,x23,x23 ; oversize dimensions
_1

CG 3 x31,x32,x33
_1
(0) ; threshold

;coordinate of center
x31=x31+x23/2+1
x32=x32+x23/2+1
x33=x33+x23/2+1

;round center to an integer to avoid resampling
x34=x31-INT(x31)
IF(x34.ge.0.5)THEN
x31=1+INT(x31)
ELSE
x31=INT(x31)
ENDIF
x34=x32-INT(x32)
IF(x34.ge.0.5)THEN
x32=1+INT(x32)
ELSE
x32=INT(x32)
ENDIF
x34=x33-INT(x33)
IF(x34.ge.0.5)THEN
x33=1+INT(x33)
ELSE
x33=INT(x33)
ENDIF

VM
echo Volume centered at X={%F7.1%x31} Y={%F7.1%x32} Z={%F7.1%x33} 

;find top left coord for window
x31=x31-INT(x22/2)
x32=x32-INT(x22/2)
x33=x33-INT(x22/2)

CP FROM PDB
<pdb>.pdb
x20
N
A
x23,x23,x23 ; oversize dimensions
_1

WI
_1
_2
x22,x22,x22
x31,x32,x33

RT 3D
_2
_1
0,180,90

x25=x24*2/3
x34=x20/x24 ; filter pass frequency 1/pix (15A)
x35=x20/x25 ; filter stop frequency 1/pix (10A)

FQ
_1
<pdb>
(7) ; butterworth lowpass
x34,x35

DE
_1
DE
_2

RE
