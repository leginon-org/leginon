; sapclass ;replaced sapclass.old on 20081214 by creating incore alignment doc
; realign particle according to class average alignment
; input: 
;  1) class alignment
;    if apsr format then will ask for class list
;    if apsh,apnq,apsr,sapc (not all) then will ask for class doc template 
;  2) particle alignment
;    if apsr format then will ask or particle list
; output: 
;  1) updated particle alignment in sapc format [pclnum,rt,x,y,class]
;      class determined from particle alignment doc otherwise set to 0
;
; automatically determines alignment type
;   3 regs = apsr/all; all=1 key
;   4 regs = sap
;   5 regs = sapc
;   6 regs = apnq
;   15 regs = apsh

FR
?IN.CLASS ALIGNMENT DOC (dir/doc)?<classaln>
UD N x20,x21
<classaln>
IF(x21.eq.3)THEN ; all or apsr
  IF(x20.gt.1)THEN ;apsr
    FR
    ?IN.LIST OF ALIGNED CLASSES (dir/classlist)?<classlist>
  ELSE
    x91=1 ; manual indicator
    GOTO LB91 ; manual = no class doc needed
  ENDIF
ENDIF
FR
?IN.CLASS DOC TEMPLATE (dir/cor_thr***)?<classdoc>
LB91 ;manual
FR
?IN.PARTICLE ALIGNMENT DOC (dir/doc)?<alndoc>
UD N x22,x23
<alndoc>
IF(x23.eq.3)THEN ; manual or apsr
 IF(x22.gt.1)THEN ;apsr
  FR
  ?IN.ALIGNED PARTICLE LIST (dir/classlist)?<pcllist>
 ENDIF
ENDIF
FR
?OUT.NEW PARTICLE ALIGNMENT DOC (dir/doc)?<outdoc>

; ~~~~~ start ~~~~~

; 1) convert pcl alignment to sap if not already
; 2) for each class
;   a) "docand" pcl alignment and classdoc
;   b) read class alignment
;   c) "sap" class alignment with particle alignment
; 3) output is a newsap document

SD IC NEW
incore_alndoc
(5),x22

DO LB2 x12=1,x22 ; for each aligned particle
x40=0
IF(x23.eq.3)THEN ; apsr or manual
  UD IC x12,x41,x42,x43
  <alndoc>
  IF(x22.gt.1)THEN ;apsr
    UD IC x12,x40
    <pcllist>
  ENDIF
ENDIF

IF(x23.eq.4)THEN ; sap
  UD IC x12,x40,x41,x42,x43
  <alndoc>
ENDIF

IF(x23.eq.5)THEN ;newsap
  UD IC x12,x40,x41,x42,x43,x47
  <alndoc>
ENDIF

IF(x23.eq.6)THEN ; apnq/mq
  UD IC x12,x47,x45,x41,x42,x43,x40
  <alndoc>
ENDIF

IF(x23.eq.15)THEN ; apsh
  UD IC x12,x44,x45,x46,x47,x40,x41,x42,x43,x48,x49,x50,x51,x52,x53,x54
  <alndoc>
  IF(x54.lt.0)THEN ;mirrored class
    IF(x47.gt.0)x47=(-1)*x47
  ENDIF
ENDIF

IF(x40.eq.0)THEN
  VM
  echo Error...<alndoc> format not recognized.
  EN
ENDIF

DO LB1 x11=1,x20 ; for each class
;--- read alignment parameter and particle number
  x30=0
  IF(x21.eq.3)THEN ; apsr or manual
    UD IC x11,x31,x32,x33
    <classaln>
    IF(x20.gt.1)THEN ;apsr
      UD IC x11,x30
      <classlist>
    ELSE ; manual
      SD IC COPY
      incore_alndoc
      <outdoc>temp
      GOTO LB90 ; if manual then no classdoc
    ENDIF
  ENDIF

IF(x21.eq.4)THEN ; sap
  UD IC x11,x30,x31,x32,x33
  <classaln>
ENDIF

IF(x21.eq.6)THEN ; apnq
  UD IC x11,x34,x35,x31,x32,x33,x30
  <classaln>
ENDIF

IF(x21.ge.15)THEN ; apsh
  UD IC x11,x34,x35,x36,x37,x30,x31,x32,x33
  <classaln>
ENDIF

IF(x30.eq.0)THEN
  VM
  echo Error...class number not identified in <classaln>.
  EN
ENDIF

SD IC COPY
incore_alndoc
<outdoc>temp1
DOC AND
<outdoc>temp1
<classdoc>x30
<outdoc>temp
(1)
DE
<outdoc>temp1

LB90 ;no class doc - skip to here


SD IC x12,x40,x41,x42,x43,x47
incore_alndoc

LB2
UD ICE
<alndoc>


UD N x24
<outdoc>temp
DO LB3 x13=1,x24   ; for each particle in this class
  UD IC x13,x40,x41,x42,x43
  <outdoc>temp

  ; sap alignment parameter with class alignment parameter
  SA P x41,x42,x43
  x41,x42,x43
  x31,x32,x33

  ; write to new particle alignment doc
  SD x13,x40,x41,x42,x43,x30
  <outdoc>

  DE
  <outdoc>temp

LB3  ; next particle x13/x40
UD ICE
<outdoc>temp
DE
<outdoc>temp

LB1  ; next class x11/x30
UD ICE
<classaln>
SD IC END
incore_alndoc

RE
