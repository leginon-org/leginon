; CORRESPONDANCE ANALYSIS AND HIERARCHICAL CLASSIFICATION
;
; 1) RUNS CORAN (CA S)
; 2) DISPLAY FACTOR HISTOGRAM AND FACTOR MAP (eigenhist.py)
; 3) GENERATE POSITIVE AND NEGATIVE EIGENIMAGES (CA SRE)
; 4) -PAUSES FOR INPUT NUMBER OF FACTORS AND WEIGHT
; 5) CLUSTERS WITH HIERARCHICAL ASCENDANT CLASSIFICATION (CL HC)
; 6) -PAUSES TO INPUT THRESHOLD
; 7) DETERMINES CLASS MEMBERSHIP (CL HD,CL HE) AND AVERAGES (AS R)
; 8) CLUSTERS WITH K-MEANS TO GENERATE SAME NUMBER OF CLASSES
; Ed Brignole 20080523

FR
?IN.ALIGNED PARTICLE TEMPLATE TO CLASSIFY (dir/ser*****)?[pcltmpl] 
FR
?IN.ALIGNED PARTICLE TEMPLATE TO AVERAGE (dir/ser*****)?[pcltmpl2]
FR
?IN.LIST OF PARTICLES (dir/doc)?[imgdoc]
FR
?IN.CLASSIFICATION MASK (dir/mask)?[mask]
FR
?OUT.OUTPUT DIRCTORY TO CREATE (dir)?[outdir]
FR
?OUT.CORAN OUTPUT PREFIX (pfx assumes _IMC)?[prefix]

; ~~~~~ start ~~~~~
MD
SET MP
(0)

VM
echo Classifying into [outdir]/[prefix]_

x99=0  ;check to see if this is repeat classification
IQ FI x99
[outdir]/[prefix]_IMC
IF(x99.eq.1)THEN
  VM
  echo This is a repeat of an earlier classification..skipping coran.
  GOTO LB98
ENDIF

VM
mkdir [outdir]
; ---------BEGIN CALLING SCRIPTS
x21=50 ; number of factors for analysis - will be overwritten later
; RUN CA S AND PLOT EIGENVECTOR HISTOGRAM
@coran[x21]
[pcltmpl]          ; ALIGNED PARTICLES TEMPLATE
[imgdoc]           ; DOC LIST OF PARTICLES
[mask]             ; MASK FOR CLASSIFICATION
[outdir]/[prefix]  ; OUTPUT PREFIX
; -------- MAKE HISTOGRAM
@eigenhist
[outdir]/[prefix]
; -------- MAKE FACTOR MAP
UD N x23
[imgdoc]
UD E
IF(x23.gt.2000)THEN ; too many images to plot
  VM
  echo "Skipping factor map too many points (>2000)."
ELSE
  x21 = 1   ; plot factors 1,2
  x22 = 2
  @casm[x21,x22]
  [outdir]/[prefix]            ; prefix of _IMC file from CA S
  VM
  ggv [outdir]/[prefix]_map{**x21}v{**x22}.ps &
ENDIF
; ------- MAKE EIGENIMAGES
@casre
[outdir]/[prefix]   ; input prefix
[mask]
; ------- CALCULATE DENDROGRAM
LB98 ;skipped coran

x99=0
IQ FI x99
[outdir]/[prefix]_dendoc
IF(x99.eq.1)THEN
  DE
  [outdir]/[prefix]_avg
  DE
  [outdir]/[prefix]_var
  DE A
  [outdir]/[prefix]_thr001
  DE
  [outdir]/[prefix]_thrk
  DE A
  [outdir]/[prefix]_km001
  DE
  [outdir]/[prefix]_kmlist
  DE
  [outdir]/[prefix]_kmav
  DE
  [outdir]/[prefix]_kmva
  ;RR x99
  ;?IN.Prior dendrogram exits (use=1,recalculate=0)?
  ;IF(x99.eq.1)GOTO LB99
  DE
  [outdir]/[prefix]_dendoc
ENDIF
MD
SET MP
(1)

VM
echo Examine factor map, eigenimages, and eigenvalue histogram

x20=1 ;first factor
x22=0 ;weight
RR x21
?IN.DISCONTINUOUS FACTORS (0) or NUMBER OF CONTINUOUS FACTORS (>=1)?

MD
SET MP
(0)
IF(x21.eq.0)THEN
  FR
  ?IN.Factors to keep (1,3-4,6)?[factors]
  @clhc_weight[x20,x21,x22] ;firstfactor,lastfactor,factorweight
  [outdir]/[prefix] ;input prefix - output dendoc
  [factors]
ELSE ;continuous factors
  RR x22
  ?IN.USE FACTOR VARIANCE AS WEIGHT (yes=1,no=0,half=0.5,etc.)?
  @clhc_weight[x20,x21,x22] ;firstfactor,lastfactor,factorweight
  [outdir]/[prefix] ;input prefix - output dendoc
ENDIF

; ------- INPUT THRESHOLD
LB99 ;use prior dendrogram
MD
SET MP
(1)

VM
echo EXAMINE DENDROGRAM TO DETERMINE THRESHOLD
RR x23
?IN.Hierarchical Ascendant Threshold (0.02)? ;<threshold>

MD
SET MP
(0)
; ------- CLUSTER PARTICLES AND CALCULATE AVERAGES
@clust_thresh[x23]
[pcltmpl2]          ; ALIGNED PARTICLES TEMPLATE
[outdir]/[prefix]   ; ASSUMES _dendoc FILE EXISTS

UD N x24
[outdir]/[prefix]_thrk
UD E
; ------- K-MEANS CLUSTERING
IF(x21.eq.0)THEN ; discontinuous
  @clust_kmeans[x21,x24] ;factors,groups
  [outdir]/[prefix] ; ASSUMES [prefix]_IMC
  [factors]         ; discontinuous factors
  [pcltmpl2]        ; ALIGNED PARTICLES TEMPLATE
ELSE ;continuous
  @clust_kmeans[x21,x24] ;factors,groups
  [outdir]/[prefix] ; ASSUMES [prefix]_IMC
  [pcltmpl2]        ; ALIGNED PARTICLES TEMPLATE
ENDIF

; ------- CLEAN UP
DE
[outdir]/[prefix]_PIX
DE
[outdir]/[prefix]_SET
DE
[outdir]/[prefix]_SEQ
DE
[outdir]/[prefix]_MAS

MD
SET MP
(1)
RE

