; cuts particle that were selected using BOXER
; will write stack of particles (ser@) and particle list (microser)
;  use noisewin.spi to obtain noise file

FR
?IN.List of micros (dir/file)?<micdoc>
FR
?IN.Template of micros (dir/mic****)?<mictmpl>
FR
?IN.Template of coordinates (dir/cords****)?<cordtmpl>
RR x77
?IN.Binning of coordinates (4)?
RR x65
?IN.Radius?
RR x50
?IN.Window box size?
FR
?IN.Noise image for normalization (dir/file)?<noise>
FR
?OUT.Folder to create (dir)?<serdir>

; ~~~~~ start ~~~~~

x51=x50/2
x18=0.0

; - Create output folders
VM
mkdir <serdir>

; - Create blank image
BL
_6
x50,x50
n
(0.0)

; Create a mask
MA
_6     ; INPUT FILE
_3     ; OUTPUT FILE
x65,x18     ; OUTER & INNER RADII  
d      ; (D)isk
e      ; (E)XTERNAL
(1.0)  ; BACKGROUND
x51,x51   ; MASK CENTER COORDINATES (NSAM, NROW)

DOC REN
<micdoc>
<serdir>/micdoc_tmp

VM
echo microsdoc renumbered

RA
<noise>
_4

UD N x99
<serdir>/micdoc_tmp

DO LB1 x70=1,x99  ; for each micro

  UD IC x70,x44
  <serdir>/micdoc_tmp

  ; find number of particles
  DOC REN
  <cordtmpl>x44
  <serdir>/cords_tmp

  UD N x78
  <serdir>/cords_tmp
  UD E

  DO LB2 x19=1,x78   ; for each particle
    ; read pt. coordinates and box size
    UD IC x19,x20,x21,x22,x23
    <serdir>/cords_tmp

    ;find center of box
    x20=x20+(x22/2)
    x21=x21+(x23/2)

    ; find top left coordinates of the window
    x40=x20*x77
    x41=x21*x77
    x30=x40-x51
    x31=x41-x51

    ; cut 
    WI
    <mictmpl>x44
    _1
    x50,x50
    x30,x31

    RA
    _1
    _2

    x19=x18+x19

    ; ce fit and contrast inversion.
    ce fit
    _4 ; ramped <noise>
    _2 ; ramped window
    _3 ; mask
    <serdir>/ser@{*****x19}

  LB2
  UD ICE 
  <serdir>/cords_tmp
  DE
  <serdir>/cords_tmp

  x45=x18+1.0
  x18=x18+x78

  ; save key,micro,1stpcl,lastpcl,numpcls
  SD x70,x44,x45,x18,x78
  <serdir>/microser

LB1
UD ICE
<serdir>/micdoc_tmp
DE
<serdir>/micdoc_tmp

RE
