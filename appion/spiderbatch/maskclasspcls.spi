[x19] ; radius
; maskclassparticles.spi (replaces grpalnmask.spi)
; Dependencies: maskshift.spi

; This procedure is useful if classes of particles that you wish to mask
; are not well aligned for masking...otherwise just use maskshift.spi
; The resulting masked particles can be used for reference free alignment

; Procedure:
; (involves mirroring that is only useful if averages are oriented with vertical 2fold axis)
; 1) mask avg*** and avg+mr
; 2) align maskav*** to maskavgmr
; 3) sap alignment parameters, rotate and mask individual particles
; Output:
;  mrtp@****** = stack of aligned masked particles
;  centerdoc = doc containing rt,x,y to center mask
;  alnavgdoc = doc for aligning averages
;  mrtpdoc - new particle alignment adjusted for alignment of class averages
;    output docs are in newsap format (pcl,rt,x,y,class)

; Note: SET 'VB OFF' or 'RESULTS OFF'
FR
?IN.MASK (dir/mask)?[mask]
FR
?IN.UNALIGNED PARTICLE TEMPLATE (dir/ser******)?[pcltmpl]
RR x20
?IN.ALIGNMENT FORMAT (1=apsh,2=apnq,3=apsr,4=sap)?;[alntype]
IF(x20.eq.3)THEN ; if apsrformat then ask for corresponding particle list
  FR
  ?IN.PARTICLE LIST THAT CORRESPONDS WITH APSR DOC (dir/list)?[apsrlist]
ENDIF
FR
?IN.PARTICLE ALIGNMENT DOC (dir/doc)?[alndoc]
FR
?IN.LIST OF CLASSES TO MASK (dir/classlist)?[grplist]
FR
?IN.TEMPLATE FOR CLASS PARTICLE LISTS (dir/grp***)?[grptmpl]
FR
?IN.CLASS AVERAGE TEMPLATE (dir/avg***)?[avgtmpl]
FR
?OUT.EXISTING OUTPUT DIRECTORY (dir)?[outdir]

; ~~~~~ start ~~~~~
;---mask/center averages---
@maskshift
[grplist]
[avgtmpl]
[mask]
[outdir]/maskav@*****
[outdir]/avcenterdoc

UD 1,x57,x58,x59
[outdir]/avcenterdoc
UD E
DE
[outdir]/avcenterdoc

;---mask/center avg of averages for reference alignment---
AS R ; average averages
[avgtmpl]
[grplist]
A
_4 ;avg
_2 ;var

;MR  ; mirror average of averages
;_1 ;avg
;_2 ;avgmr
;Y  ;yaxis

;AS R  ; add average and mirror (assumes 2-fold)
;_*
;(1-2)
;A
;_3 ;avg+mr
;_4 ;var

;CP
;_3
;_4
;DE
;_3

MM C   ; mask
[mask]
_4 ;avg+mr : overwritten!

SH ;center the masked average of class averages
_4 ; maskavg+mr
_1 ;[outdir]/maskavgmr
x58,x59

DE
_2
DE
_4
;---align masked,centered-averages to masked,centered-avg of averages---
UD N x21
[grplist]
UD x21,x31
[grplist]
FS
[avgtmpl]x31
FI x26,x27
[avgtmpl]x31
(12),(2)

x29=x26/2-x19-2 ; search range
AP NQ
_*
(1)
x29,(1)
(1),x19
[outdir]/maskav@*****
[grplist]
[outdir]/alnavgdoc

DE
_1
DE
[outdir]/maskav

;---write doc that has each particle and its uncentered class alignment---
x30=0 ; set particle counter
UD N x21 ; number of groups
[outdir]/alnavgdoc
SD IC NEW ; alignment of averages
alnavgdoc_ic
(4),x21
UD N x23 ; number of particles
[alndoc]
SD IC NEW
pclclassaln_ic
(5),x23 ;at most x23 particles
DO LB4 x14=1,x21 ; for each group
    ;         ref,ccc,rt, xsh,ysh,grp
    UD IC x14,x91,x92,x32,x33,x34,x31 ;classaln params
    [outdir]/alnavgdoc

    ; center,rotate
    SA P x32,x33,x34 ; shift+align
    x57,x58,x59    ; cg-shift
    x32,x33,x34    ; align
    ;put avg back to former x-y position for masking
    SA P x32,x33,x34  ; shift+align+unshift
    x32,x33,x34    ; shift+align
    -x57,-x58,-x59 ; unshift

    ;         grp,rt ,xsh,ysh
    SD IC x14,x31,x32,x33,x34
    alnavgdoc_ic

    UD N x22
    [grptmpl]x31
    DO LB5 x15=1,x22 ; for each particle in group
        UD IC x15,x35
        [grptmpl]x31
        x30=x30+1
        ;         pcl,rt ,xsh,ysh,grp
        SD IC x30,x35,x32,x33,x34,x31
        pclclassaln_ic ;[outdir]/pclclassaln_tmp
    LB5  ; next particle x15
    UD ICE
    [grptmpl]x31
LB4  ; next group x14
SD IC COPY
pclclassaln_ic
[outdir]/pclclassaln_tmp
SD IC E
pclclassaln_ic

DOC SORT
[outdir]/pclclassaln_tmp
[outdir]/pclclassaln
(1)
Y

DE
[outdir]/pclclassaln_tmp

UD ICE
[outdir]/alnavgdoc

SD IC COPY ; overwrite old alignment with new alignment that has centering+uncentering
alnavgdoc_ic
[outdir]/alnavgdoc
SD IC E
alnavgdoc_ic

; prepare alignment docs for combining with grp alignment params
; sort alignment doc by particle number
IF(x20.eq.1)THEN ; apsh ; x45 is pcl, x46-8 is alignment
    DOC SORT
    [alndoc]
    [outdir]/apshdocsort
    (5)  ; particles in 5th register
    Y
    UD IC x23,x41,x42,x43,x44,x45,x46,x47,x48 ;,x49,x50,x51,x52,x53,x54,x55
    [outdir]/apshdocsort 
    GOTO LB88 ; skip other types
ENDIF
IF(x20.eq.2)THEN ; apnq  ; x46-8=aln;x45=pcl
    DOC SORT
    [alndoc]
    [outdir]/apnqdocsort
    (6)  ; particles in 6th register
    Y
    UD IC x23,x41,x42,x46,x47,x48,x45 
    [outdir]/apnqdocsort
    GOTO LB88
ENDIF
IF(x20.eq.3)THEN ; apsr
    UD N x25
    [apsrlist]
    IF(x23.ne.x25)THEN
        VM
        echo Error..APSR alignment doc and particle list do not match.
        EN
    ENDIF
    SD IC NEW
    apsr2sap_ic
    (4),x23
    DO LB6 x16=1,x23
        UD IC x16,x46,x47,x48
        [alndoc]
        UD IC x16,x45
        [apsrlist]
        SD IC x16,x45,x46,x47,x48
        apsr2sap_ic
    LB6
    UD ICE
    [alndoc]
    UD ICE
    [apsrlist]
;    SD IC COPY
;    apsr2sap_ic
;    [outdir]/apsrdoctemp
    DOC SORT
    apsr2sap_ic
    [outdir]/sapdocsort
    (1)
    Y
    SD IC E
    apsr2sap_ic
    UD IC x23,x45,x46,x47,x48
    [outdir]/sapdocsort
    GOTO LB88 ; skip other types
ENDIF
IF(x20.eq.4)THEN ; sap
    DOC SORT
    [alndoc]
    [outdir]/sapdocsort
    (1)
    Y
    UD IC x23,x45,x46,x47,x48
    [outdir]/sapdocsort
ENDIF

LB88 ;---sap parameters, rotate and mask particles
VM
echo 'Combining individual particle alignments with uncentered class alignment..'

x40=1 ; particle to start search
x30=0 ; found particle counter

UD N x24  ; how many classified particles
[outdir]/pclclassaln

SD IC NEW ; sap+class alignment of particles
mrtpdoc_ic
(5),x24

MS
_1@
x26,x27,(1) ;imgsize
x45         ;largest number

DO LB1 x11=1,x24 ; for each classified particle
  UD IC x11,x35,x32,x33,x34,x31
  [outdir]/pclclassaln

  ; search for particle x35
  DO LB2 x12=x40,x23 ; for each aligned particle

    IF(x20.eq.1)THEN ; apsh ; x45 is pcl, x46-8 is alignment
      UD IC x12,x41,x42,x43,x44,x45,x46,x47,x48 ;,x49,x50,x51,x52,x53,x54,x55
      [outdir]/apshdocsort 
      GOTO LB89
    ENDIF
    IF(x20.eq.2)THEN ; apnq  ; x46-8=aln;x45=pcl
      UD IC x12,x41,x42,x46,x47,x48,x45 
      [outdir]/apnqdocsort
      GOTO LB89
    ENDIF
    ;IF(x20.eq.3)THEN ; apsr2sap
    UD IC x12,x45,x46,x47,x48
    [outdir]/sapdocsort
    ;GOTO LB89
    ;ENDIF
    ;IF(x20.eq.4)THEN ; sap
    ;UD IC x12,x45,x46,x47,x48
    ;[alndoc]
    ;ENDIF

    LB89 ; found alignment type skip others

    IF(x45.gt.x35)GOTO LB90 ; go to next classified particle to catch up
    IF(x45.eq.x35)THEN ; found particle
      SA P x37,x38,x39 ; apsh+apnq
      x46,x47,x48    ;pcl aln params
      x32,x33,x34    ;class aln params

      x30=x30+1 ; particle counter
      ;         pcl,rt ,xsh,ysh,grp
      SD IC x30,x45,x37,x38,x39,x31
      mrtpdoc_ic

      RT SQ
      [pcltmpl]x45
      _1@{******x45} ;[outdir]/mrtp@{******x45} ;
      x37
      x38,x39

      x40=x12 ; start from this particle next round
      GOTO LB90   ; escape and search for next particle
    ENDIF

  LB2 ; next aligned particle x12

LB90 ; goto next classified particle

LB1 ; next class x11
SD IC COPY
mrtpdoc_ic
[outdir]/mrtpdoc
SD IC E
mrtpdoc_ic

CP
_1@
[outdir]/mrtp@
DE
_1

UD ICE
[outdir]/pclclassaln
DE
[outdir]/pclclassaln

IF(x20.eq.1)THEN
  UD ICE
  [outdir]/apshdocsort
  DE
  [outdir]/apshdocsort
ENDIF
IF(x20.eq.2)THEN
  UD ICE
  [outdir]/apnqdocsort
  DE
  [outdir]/apnqdocsort
ENDIF
IF(x20.ge.3)
  UD ICE
  [outdir]/sapdocsort
  DE
  [outdir]/sapdocsort
ENDIF

;overwrite aligned particles with masked-centered particles
@maskshift
[outdir]/mrtpdoc
[outdir]/mrtp@******
[mask]
[outdir]/mrtp@******
[outdir]/centerdoc
; output is centerdoc and mrtp@

VM
echo Masked {%F7.1%x24} of {%F7.1%x23} particles in {%F7.1%x21} classes

RE
