[x97,x99] ; [lastfactor,numberofclasses]
; PROCEDURE FILE FOR CORAN AND HAC
; MUST PREDETERMINE FACTORS AND NUMBER OF GROUPS
; FOR AUTOMATION
; CL HC OF THESE
; PAUSES TO INPUT THRESHOLD
; CALCULATES GROUP MEMBERSHIP (CL HE)
; AND GROUP AVERAGES (AS DC same as AS R)
; requires:
;  coran.spi
;  eigparse 
;  casm.spi
;  clhc_weight.spi
;  clust_thresh.spi
; Ed Brignole 20080528

FR
?IN.PARTICLE TEMPLATE FOR CLASSIFICATION (dir/ser*****)?[pcltmpl1]
FR
?IN.PARTICLE TEMPLATE FOR AVERAGES (dir/ser*****)?[pcltmpl2]
FR
?IN.LIST OF PARTICLES (dir/doc)?[pcllist]
FR
?IN.MASK FOR CLASSIFICATION (dir/img)?[mask]
FR
?OUT.CORAN OUTPUT PREFIX (prefix)?[prefix]

; ~~~~~ start ~~~~~
VM
echo Classifying into [prefix]_

; -------mock classify if only 1 particle in this list
UD N x20
[pcllist]
UD E
IF(x20.le.1)THEN ; skip classification and make only 1 class
 x89=1 ;number of classes
 x88=0 ;factor weight
 SD x89,x89,x20
 [prefix]_kmlist
 SD E
 [prefix]_kmlist
 VM
 cp [pcllist].$DATEXT [prefix]_km001.$DATEXT
 VM
 AS R
 [pcltmpl2]
 [pcllist]
 A
 [prefix]_avg001
 [prefix]_var001
 GOTO LB99 ; escape
ENDIF

; --------BEGIN CORRESPONDANCE ANALYSIS
@coran[x97] ;lastfactor
[pcltmpl1]  ; ALIGNED PARTICLES TEMPLATE
[pcllist]   ; DOC LIST OF PARTICLES
[mask]      ; MASK FOR CLASSIFICATION
[prefix]    ; OUTPUT PREFIX

; --------CLUSTER PARTICLES AND CALCULATE AVERAGES
@clust_kmeans[x97,x99] ; factors,classes
[prefix]      ; coran prefix
[pcltmpl2]    ; aligned particle template

; ------- CLEAN UP
DE
[prefix]_SET
DE
[prefix]_SEQ
DE
[prefix]_PIX

LB99 ; escape with one class if not enough particles to classify

RE
