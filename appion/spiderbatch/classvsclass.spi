; classvsclass.spi 2007.07.05
; Description:
;   make table with classes vs classes and particle lists
;   before this script: 
;     1) 1st classification within one region
;     2) then classify within a different region

; Input
;  1) list of 1st classes
;  2) template of particle lists for 1st subclasses
;  3) list of 2nd subclasses
;  4) template of particle lists for 2nd subclasses
;  5) prefix for output documents 
; Output
;  1) table with number of particles in class 1 (regs) vs class 2 (keys) /prefix_1v2table
;  2) docs with particle list for each class /prefix_***v***

FR
?IN.LIST OF CLASSES FROM INITIAL CLASSIFICATION (dir/list1)?<classlist1>
FR
?IN.PARTICLE LIST FROM INITIAL CLASSIFICATION (dir/grp***)?<classtmpl1>
FR
?IN.LIST OF CLASSES FROM SECOND CLASSIFICATION (dir/list2)?<classlist2>
FR
?IN.PARTICLE LIST FROM SECOND CLASSIFICATION (dir/grp***)?<classtmpl2>
FR
?OUT.OUTPUT DOC PREFIX (dir/prfx will append _1v2table and _***v***)?<outpfx>

; ~~~~~ start ~~~~~
MD
vb off

UD N x21 ; how many classes
<classlist1>
VM
echo -n {%F7.1%x21} classes from first classification and' '
IF(x21.gt.50)THEN
  echo ERROR: Cannot have more than 50 classes!
  EN
ENDIF
IF(x21.lt.2)THEN
  echo ERROR: Cannot have less than 2 classes!
  EN
ENDIF

UD N x22
<classlist2>
VM
echo {%F7.1%x22} classes from second classification.

SD IC NEW 
tableofclasses
x21,x22 ; class1 in registers,class2 in keys

x34=0 ; combined particle counter
x41=0 ; class1 particle sum
x36=0 ; class2 particle sum

DO LB1 x11=1,x22 ; for each class2
UD IC x11,x32 ; classnum,#pcls
<classlist2>

UD N x38
<classtmpl2>x32
x36=x36+x38

DO LB2 x12=1,x21 ; for each class1
UD IC x12,x31
<classlist1>

UD N x37
<classtmpl1>x31
x41=x41+x37

DOC AND
<classtmpl1>x31
<classtmpl2>x32
<outpfx>_{***x31}v{***x32}
(1)

UD N x23
<outpfx>_{***x31}v{***x32}

x34=x34+x23 ; add particles to counter

; save number of particles into register for each class 1
x49=49+x12
x{**x49}=x23   ; x50-x99

LB2 ; next subclass in merged subclass-x11

; for this class 2, save each class 1
IF(x21.eq.2)THEN
SD IC x11,x50,x51
tableofclasses
ENDIF
IF(x21.eq.3)THEN
SD IC x11,x50,x51,x52
tableofclasses
ENDIF
IF(x21.eq.4)THEN
SD IC x11,x50,x51,x52,x53
tableofclasses
ENDIF
IF(x21.eq.5)THEN
SD IC x11,x50,x51,x52,x53,x54
tableofclasses
ENDIF
IF(x21.eq.6)THEN
SD IC x11,x50,x51,x52,x53,x54,x55
tableofclasses
ENDIF
IF(x21.eq.7)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56
tableofclasses
ENDIF
IF(x21.eq.8)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57
tableofclasses
ENDIF
IF(x21.eq.9)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58
tableofclasses
ENDIF
IF(x21.eq.10)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59
tableofclasses
ENDIF
IF(x21.eq.11)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60
tableofclasses
ENDIF
IF(x21.eq.12)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61
tableofclasses
ENDIF
IF(x21.eq.13)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62
tableofclasses
ENDIF
IF(x21.eq.14)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63
tableofclasses
ENDIF
IF(x21.eq.15)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64
tableofclasses
ENDIF
IF(x21.eq.16)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65
tableofclasses
ENDIF
IF(x21.eq.17)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66
tableofclasses
ENDIF
IF(x21.eq.18)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67
tableofclasses
ENDIF
IF(x21.eq.19)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68
tableofclasses
ENDIF
IF(x21.eq.20)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69
tableofclasses
ENDIF
IF(x21.eq.21)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70
tableofclasses
ENDIF
IF(x21.eq.22)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71
tableofclasses
ENDIF
IF(x21.eq.23)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72
tableofclasses
ENDIF
IF(x21.eq.24)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73
tableofclasses
ENDIF
IF(x21.eq.25)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74
tableofclasses
ENDIF
IF(x21.eq.26)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75
tableofclasses
ENDIF
IF(x21.eq.27)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76
tableofclasses
ENDIF
IF(x21.eq.28)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77
tableofclasses
ENDIF
IF(x21.eq.29)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78
tableofclasses
ENDIF
IF(x21.eq.30)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79
tableofclasses
ENDIF
IF(x21.eq.31)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80
tableofclasses
ENDIF
IF(x21.eq.32)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81
tableofclasses
ENDIF
IF(x21.eq.33)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82
tableofclasses
ENDIF
IF(x21.eq.34)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83
tableofclasses
ENDIF
IF(x21.eq.35)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84
tableofclasses
ENDIF
IF(x21.eq.36)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85
tableofclasses
ENDIF
IF(x21.eq.37)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86
tableofclasses
ENDIF
IF(x21.eq.38)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87
tableofclasses
ENDIF
IF(x21.eq.39)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88
tableofclasses
ENDIF
IF(x21.eq.40)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89
tableofclasses
ENDIF
IF(x21.eq.41)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90
tableofclasses
ENDIF
IF(x21.eq.42)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91
tableofclasses
ENDIF
IF(x21.eq.43)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92
tableofclasses
ENDIF
IF(x21.eq.44)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93
tableofclasses
ENDIF
IF(x21.eq.45)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94
tableofclasses
ENDIF
IF(x21.eq.46)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95
tableofclasses
ENDIF
IF(x21.eq.47)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96
tableofclasses
ENDIF
IF(x21.eq.48)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97
tableofclasses
ENDIF
IF(x21.eq.49)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98
tableofclasses
ENDIF
IF(x21.eq.50)THEN
SD IC x11,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99
tableofclasses
ENDIF

LB1 ; next mergeclass x11
UD ICE
<classlist1>
UD ICE
<classlist2>

SD IC COPY
tableofclasses
<outpfx>_1v2table
SD IC END
tableofclasses

VM
echo  First classification has {%F7.1%x41} particles.
VM
echo  Second classification has {%F7.1%x36} particles.
VM
echo  with {%F7.1%x34} overlapping particles.

RE
